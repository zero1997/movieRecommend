<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0"
         xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
    <modelVersion>4.0.0</modelVersion>

    <groupId>com.pku.evanyang</groupId>
    <artifactId>movieRecommend</artifactId>
    <version>1.0-SNAPSHOT</version>

    <distributionManagement>
        <repository>
            <!--必须与 settings.xml 的 id 一致-->
            <id>kb-sparkg-sparkg</id>
            <name>sparkg</name>
            <url>https://mirrors.tencent.com/repository/maven/sparkg/</url>
        </repository>
    </distributionManagement>


    <properties>
        <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
        <project.reporting.outputEncoding>UTF-8</project.reporting.outputEncoding>
        <java.version>1.8</java.version>
        <maven.version>3.3.9</maven.version>
        <PermGen>512m</PermGen>
        <MaxPermGen>512m</MaxPermGen>
        <CodeCacheSize>1024m</CodeCacheSize>
        <scala.version>2.11.8</scala.version>
        <scala.binary.version>2.11</scala.binary.version>
        <scopt.version>3.5.0</scopt.version>
        <spark.groupId>org.apache.spark</spark.groupId>
        <!--    <spark.version>2.1.2</spark.version>-->
        <protobuf.version>2.5.0</protobuf.version>
        <protobuf.input.directory>${project.basedir}/src/main/proto</protobuf.input.directory>
        <protobuf.output.directory>${project.build.directory}/generated-sources</protobuf.output.directory>
        <tensorflow.version>1.10.0</tensorflow.version>
        <jars.target.dir>${project.build.directory}/scala-${scala.binary.version}/jars</jars.target.dir>
        <build.copyDependenciesPhase>none</build.copyDependenciesPhase>
        <spark.scope>provided</spark.scope>
        <spark.kafka.scope>provided</spark.kafka.scope>
        <kafka.scope>provided</kafka.scope>
        <xgboost.scope>provided</xgboost.scope>
        <tensorflow.scope>provided</tensorflow.scope>
    </properties>


    <dependencies>
        <!-- georgexli maven添加 -->
        <dependency>
            <groupId>com.tencent.georgexli</groupId>
            <artifactId>legacy_omg_utils</artifactId>
            <version>2.0.0</version>
        </dependency>
        <!-- georgexli 本地添加 -->
        <dependency>
            <groupId>com.omg.ons</groupId>
            <artifactId>nameserver</artifactId>
            <version>1.0.0</version>
        </dependency>
        <!-- georgexli maven添加 -->
        <dependency>
            <groupId>com.lihaoyi</groupId>
            <artifactId>sourcecode_2.11</artifactId>
            <version>0.1.3</version>
        </dependency>
        <dependency>
            <groupId>com.huaban</groupId>
            <artifactId>jieba-analysis</artifactId>
            <version>1.0.2</version>
        </dependency>
        <!--    <dependency>-->
        <!--      <groupId>com.omg.ons</groupId>-->
        <!--      <artifactId>nameserver</artifactId>-->
        <!--      <version>1.0.0</version>-->
        <!--      <systemPath>/Volumes/dev/lib/spark/nameserver.jar</systemPath>-->
        <!--      <scope>compile</scope>-->
        <!--    </dependency>-->
        <!-- Spark -->
        <dependency>
            <groupId>${spark.groupId}</groupId>
            <artifactId>spark-core_${scala.binary.version}</artifactId>
            <version>${spark.version}</version>
            <scope>${spark.scope}</scope>
        </dependency>
        <dependency>
            <groupId>${spark.groupId}</groupId>
            <artifactId>spark-sql_${scala.binary.version}</artifactId>
            <version>${spark.version}</version>
            <scope>${spark.scope}</scope>
        </dependency>
        <dependency>
            <groupId>${spark.groupId}</groupId>
            <artifactId>spark-streaming_${scala.binary.version}</artifactId>
            <version>${spark.version}</version>
            <scope>${spark.scope}</scope>
        </dependency>
        <dependency>
            <groupId>${spark.groupId}</groupId>
            <artifactId>spark-mllib_${scala.binary.version}</artifactId>
            <version>${spark.version}</version>
            <scope>${spark.scope}</scope>
        </dependency>
        <dependency>
            <groupId>${spark.groupId}</groupId>
            <artifactId>spark-graphx_${scala.binary.version}</artifactId>
            <version>${spark.version}</version>
            <scope>${spark.scope}</scope>
        </dependency>
        <dependency>
            <groupId>${spark.groupId}</groupId>
            <artifactId>spark-streaming-kafka-0-10-assembly_${scala.binary.version}</artifactId>
            <version>${spark.version}</version>
            <exclusions>
                <exclusion>
                    <groupId>${spark.groupId}</groupId>
                    <artifactId>spark-tags_${scala.binary.version}</artifactId>
                </exclusion>
            </exclusions>
            <scope>${spark.kafka.scope}</scope>
        </dependency>

        <!-- XGBoost -->
        <!--<dependency>
            <groupId>ml.dmlc</groupId>
            <artifactId>xgboost4j-spark</artifactId>
            <version>0.82</version>
            <scope>${xgboost.scope}</scope>
            <exclusions>
                <exclusion>
                    <groupId>org.scala-lang</groupId>
                    <artifactId>*</artifactId>
                </exclusion>
                <exclusion>
                    <groupId>commons-logging</groupId>
                    <artifactId>commons-logging</artifactId>
                </exclusion>
                <exclusion>
                    <groupId>com.esotericsoftware.kryo</groupId>
                    <artifactId>kryo</artifactId>
                </exclusion>
            </exclusions>
        </dependency>-->
        <dependency>
            <groupId>ml.dmlc</groupId>
            <artifactId>xgboost4j-spark</artifactId>
            <version>0.80-SNAPSHOT</version>
        </dependency>

        <!-- L5 API -->
        <dependency>
            <groupId>com.tencent.weixin</groupId>
            <artifactId>l5sys</artifactId>
            <version>1.0.0</version>
        </dependency>

        <!-- ugly: just for tdbank -->
        <dependency>
            <groupId>com.alibaba</groupId>
            <artifactId>fastjson</artifactId>
            <version>1.2.83</version>
        </dependency>


        <!-- Redis -->
        <dependency>
            <groupId>org.apache.curator</groupId>
            <artifactId>curator-framework</artifactId>
            <version>4.0.0</version>
        </dependency>
        <dependency>
            <groupId>redis.clients</groupId>
            <artifactId>jedis</artifactId>
            <version>2.9.0</version>
        </dependency>

        <dependency>
            <groupId>args4j</groupId>
            <artifactId>args4j</artifactId>
            <version>2.0.10</version>
        </dependency>

        <dependency>
            <artifactId>velocity</artifactId>
            <groupId>org.apache.velocity</groupId>
            <version>1.7</version>
        </dependency>

        <dependency>
            <groupId>org.scalaj</groupId>
            <artifactId>scalaj-http_${scala.binary.version}</artifactId>
            <version>2.3.0</version>
            <exclusions>
                <exclusion>
                    <groupId>org.scala-lang</groupId>
                    <artifactId>scala-library</artifactId>
                </exclusion>
            </exclusions>
        </dependency>

        <dependency>
            <groupId>org.tensorflow</groupId>
            <artifactId>tensorflow</artifactId>
            <version>${tensorflow.version}</version>
            <scope>${tensorflow.scope}</scope>
        </dependency>

        <!-- for test-->
        <dependency>
            <groupId>junit</groupId>
            <artifactId>junit</artifactId>
            <version>4.12</version>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>org.scalatest</groupId>
            <artifactId>scalatest_${scala.binary.version}</artifactId>
            <version>3.0.3</version>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>org.mockito</groupId>
            <artifactId>mockito-core</artifactId>
            <version>1.10.19</version>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>org.jmock</groupId>
            <artifactId>jmock-junit4</artifactId>
            <scope>test</scope>
            <version>2.8.4</version>
        </dependency>
        <dependency>
            <groupId>org.scalacheck</groupId>
            <artifactId>scalacheck_${scala.binary.version}</artifactId>
            <version>1.13.5</version>
            <scope>test</scope>
        </dependency>

        <!--joda-time-->
        <dependency>
            <groupId>joda-time</groupId>
            <artifactId>joda-time</artifactId>
            <version>2.9.4</version>
        </dependency>

    </dependencies>


    <dependencyManagement>
        <dependencies>
            <dependency>
                <groupId>org.apache.spark</groupId>
                <artifactId>spark-toolkit_${scala.binary.version}</artifactId>
                <version>${spark.version}</version>
                <scope>${spark.scope}</scope>
                <exclusions>
                    <exclusion>
                        <groupId>com.alibaba</groupId>
                        <artifactId>fastjson</artifactId>
                    </exclusion>
                </exclusions>
            </dependency>
        </dependencies>
    </dependencyManagement>

    <build>
        <resources>
            <resource>
                <directory>src/main/resources</directory>
            </resource>
        </resources>

        <extensions>
            <!-- provides os.detected.classifier (i.e. linux-x86_64, osx-x86_64) property -->
            <extension>
                <groupId>kr.motd.maven</groupId>
                <artifactId>os-maven-plugin</artifactId>
                <version>1.5.0.Final</version>
            </extension>
        </extensions>

        <plugins>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-enforcer-plugin</artifactId>
                <version>1.4.1</version>
                <executions>
                    <execution>
                        <id>enforce-versions</id>
                        <goals>
                            <goal>enforce</goal>
                        </goals>
                        <configuration>
                            <rules>
                                <requireMavenVersion>
                                    <version>${maven.version}</version>
                                </requireMavenVersion>
                                <requireJavaVersion>
                                    <version>${java.version}</version>
                                </requireJavaVersion>
                                <bannedDependencies>
                                    <excludes>
                                        <exclude>org.jboss.netty</exclude>
                                        <exclude>org.codehaus.groovy</exclude>
                                        <exclude>*:*_2.10</exclude>
                                    </excludes>
                                    <searchTransitive>true</searchTransitive>
                                </bannedDependencies>
                            </rules>
                        </configuration>
                    </execution>
                </executions>
            </plugin>


            <!-- add generated proto buffer classes into the package -->
            <plugin>
                <groupId>org.codehaus.mojo</groupId>
                <artifactId>build-helper-maven-plugin</artifactId>
                <version>3.0.0</version>
                <executions>
                    <execution>
                        <id>add-classes</id>
                        <phase>generate-sources</phase>
                        <goals>
                            <goal>add-source</goal>
                        </goals>
                        <configuration>
                            <sources>
                                <source>${protobuf.output.directory}</source>
                            </sources>
                        </configuration>
                    </execution>
                </executions>
            </plugin>

            <plugin>
                <groupId>net.alchim31.maven</groupId>
                <artifactId>scala-maven-plugin</artifactId>
                <version>3.2.0</version>
                <executions>
                    <execution>
                        <id>scala-compile-first</id>
                        <phase>process-resources</phase>
                        <goals>
                            <goal>compile</goal>
                        </goals>
                    </execution>
                    <execution>
                        <id>scala-test-compile-first</id>
                        <phase>process-test-resources</phase>
                        <goals>
                            <goal>testCompile</goal>
                        </goals>
                    </execution>
                    <execution>
                        <id>attach-scaladocs</id>
                        <phase>verify</phase>
                        <goals>
                            <goal>doc-jar</goal>
                        </goals>
                    </execution>
                </executions>
                <configuration>
                    <scalaVersion>${scala.version}</scalaVersion>
                    <recompileMode>incremental</recompileMode>
                    <useZincServer>true</useZincServer>
                    <args>
                        <arg>-unchecked</arg>
                        <arg>-deprecation</arg>
                        <arg>-feature</arg>
                    </args>
                    <javacArgs>
                        <javacArg>-source</javacArg>
                        <javacArg>${java.version}</javacArg>
                        <javacArg>-target</javacArg>
                        <javacArg>${java.version}</javacArg>
                    </javacArgs>
                </configuration>
            </plugin>

            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-compiler-plugin</artifactId>
                <version>3.3</version>
                <configuration>
                    <source>${java.version}</source>
                    <target>${java.version}</target>
                    <encoding>${project.build.sourceEncoding}</encoding>
                    <maxmem>1024m</maxmem>
                    <fork>true</fork>
                </configuration>
            </plugin>

            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-shade-plugin</artifactId>
                <version>3.1.0</version>
                <executions>
                    <execution>
                        <id>uber-jar</id>
                        <phase>package</phase>
                        <goals>
                            <goal>shade</goal>
                        </goals>
                        <configuration>
                            <finalName>${project.artifactId}-${project.version}-jar-with-dependencies</finalName>
                            <transformers>
                                <transformer implementation="org.apache.maven.plugins.shade.resource.ServicesResourceTransformer" />
                                <transformer implementation="org.apache.maven.plugins.shade.resource.ApacheLicenseResourceTransformer" />
                                <transformer implementation="org.apache.maven.plugins.shade.resource.ApacheNoticeResourceTransformer" />
                            </transformers>
                            <filters>
                                <filter>
                                    <artifact>*:* </artifact>
                                    <excludes>
                                        <exclude>LICENSE</exclude>
                                        <exclude>META-INF/*.SF</exclude>
                                        <exclude>META-INF/*.DSA</exclude>
                                        <exclude>META-INF/*.RSA</exclude>
                                    </excludes>
                                </filter>
                            </filters>
                        </configuration>
                    </execution>
                </executions>
            </plugin>

            <!-- opensource -->
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-source-plugin</artifactId>
                <version>3.0.1</version>
                <configuration>
                    <attach>true</attach>
                </configuration>
                <executions>
                    <execution>
                        <id>create-source-jar</id>
                        <goals>
                            <goal>jar-no-fork</goal>
                        </goals>
                    </execution>
                </executions>
            </plugin>

            <!-- Check java styles -->
            <!--            <plugin>-->
            <!--                <groupId>org.apache.maven.plugins</groupId>-->
            <!--                <artifactId>maven-checkstyle-plugin</artifactId>-->
            <!--                <version>2.17</version>-->
            <!--                <configuration>-->
            <!--                    <failOnViolation>false</failOnViolation>-->
            <!--                    <includeTestSourceDirectory>true</includeTestSourceDirectory>-->
            <!--                    <sourceDirectories>-->
            <!--                        <dir>${basedir}/src/main/java</dir>-->
            <!--                        <dir>${basedir}/src/main/scala</dir>-->
            <!--                    </sourceDirectories>-->
            <!--                    <testSourceDirectory>${basedir}/src/test/java</testSourceDirectory>-->
            <!--                    <configLocation>javastyle-config.xml</configLocation>-->
            <!--                    <outputFile>${basedir}/target/javastyle-output.xml</outputFile>-->
            <!--                </configuration>-->
            <!--                <executions>-->
            <!--                    <execution>-->
            <!--                        <goals>-->
            <!--                            <goal>check</goal>-->
            <!--                        </goals>-->
            <!--                    </execution>-->
            <!--                </executions>-->
            <!--            </plugin>-->

            <!-- Check scala styles -->
            <!--            <plugin>-->
            <!--                <groupId>org.scalastyle</groupId>-->
            <!--                <artifactId>scalastyle-maven-plugin</artifactId>-->
            <!--                <version>1.0.0</version>-->
            <!--                <configuration>-->
            <!--                    <verbose>false</verbose>-->
            <!--                    <failOnViolation>true</failOnViolation>-->
            <!--                    <includeTestSourceDirectory>false</includeTestSourceDirectory>-->
            <!--                    <failOnWarning>false</failOnWarning>-->
            <!--                    <sourceDirectory>${basedir}/src/main/scala</sourceDirectory>-->
            <!--                    <testSourceDirectory>${basedir}/src/test/scala</testSourceDirectory>-->
            <!--                    <configLocation>scalastyle-config.xml</configLocation>-->
            <!--                    <outputFile>${basedir}/target/scalastyle-output.xml</outputFile>-->
            <!--                    <inputEncoding>${project.build.sourceEncoding}</inputEncoding>-->
            <!--                    <outputEncoding>${project.reporting.outputEncoding}</outputEncoding>-->
            <!--                </configuration>-->
            <!--                <executions>-->
            <!--                    <execution>-->
            <!--                        <goals>-->
            <!--                            <goal>check</goal>-->
            <!--                        </goals>-->
            <!--                    </execution>-->
            <!--                </executions>-->
            <!--            </plugin>-->

            <!-- Surefire runs all Java tests -->
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-surefire-plugin</artifactId>
                <version>2.22.1</version>
                <configuration>
                    <includes>
                        <include>**/Test*.java</include>
                        <include>**/*Test.java</include>
                        <include>**/*TestCase.java</include>
                        <include>**/*Suite.java</include>
                    </includes>
                    <reportsDirectory>${project.build.directory}/surefire-reports</reportsDirectory>
                    <forkCount>3</forkCount>
                    <reuseForks>true</reuseForks>
                    <argLine>-Xmx1024m</argLine>
                    <failIfNoTests>false</failIfNoTests>
                </configuration>
                <executions>
                    <execution>
                        <id>test</id>
                        <goals>
                            <goal>test</goal>
                        </goals>
                    </execution>
                </executions>
            </plugin>

            <!-- Scalatest runs all Scala tests -->
            <plugin>
                <groupId>org.scalatest</groupId>
                <artifactId>scalatest-maven-plugin</artifactId>
                <version>2.0.0</version>
                <configuration>
                    <reportsDirectory>${project.build.directory}/surefire-reports</reportsDirectory>
                    <junitxml>.</junitxml>
                    <filereports>TestSuite.txt</filereports>
                    <argLine>-ea -Xmx1024m -XX:MaxPermSize=${MaxPermGen}</argLine>
                    <stderr/>
                </configuration>
                <executions>
                    <execution>
                        <id>test</id>
                        <goals>
                            <goal>test</goal>
                        </goals>
                    </execution>
                </executions>
            </plugin>
        </plugins>
    </build>

    <profiles>
        <profile>
            <id>local</id>
            <properties>
                <spark.scope>compile</spark.scope>
            </properties>
        </profile>
        <profile>
            <id>xgboost</id>
            <properties>
                <xgboost.scope>compile</xgboost.scope>
            </properties>
        </profile>
        <profile>
            <id>tensorflow</id>
            <properties>
                <tensorflow.scope>compile</tensorflow.scope>
            </properties>
        </profile>
        <profile>
            <id>kafka</id>
            <properties>
                <spark.kafka.scope>compile</spark.kafka.scope>
            </properties>
        </profile>
        <profile>
            <id>hbase</id>
            <properties>
                <hbase.scope>compile</hbase.scope>
            </properties>
        </profile>
        <profile>
            <id>spark-2.1.2</id>
            <properties>
                <spark.version>2.1.2</spark.version>
                <spark.groupId>org.apache.spark</spark.groupId>
            </properties>
            <activation>
                <activeByDefault>true</activeByDefault>
            </activation>
        </profile>

        <profile>
            <id>copy-dependencies</id>
            <properties>
                <build.copyDependenciesPhase>package</build.copyDependenciesPhase>
            </properties>
        </profile>
    </profiles>

</project>